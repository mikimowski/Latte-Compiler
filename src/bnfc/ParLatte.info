-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParLatte.y
-----------------------------------------------------------------------------

state 75 contains 1 shift/reduce conflicts.
state 146 contains 1 shift/reduce conflicts.

rule 40 is unused
rule 41 is unused
rule 48 is unused
rule 49 is unused
rule 50 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> ClassDef                                 (5)
	TopDef -> FuncDef                                  (6)
	FuncDef -> Type Ident '(' ListArg ')' Block        (7)
	Arg -> Type Ident                                  (8)
	ClassMember -> Type Ident ';'                      (9)
	ClassMember -> FuncDef                             (10)
	ClassDef -> 'class' Ident '{' ListClassMember '}'   (11)
	ClassDef -> 'class' Ident 'extends' Ident '{' ListClassMember '}'   (12)
	ListArg ->                                         (13)
	ListArg -> Arg                                     (14)
	ListArg -> Arg ',' ListArg                         (15)
	ListTopDef -> TopDef                               (16)
	ListTopDef -> TopDef ListTopDef                    (17)
	ListClassMember ->                                 (18)
	ListClassMember -> ListClassMember ClassMember     (19)
	Block -> '{' ListStmt '}'                          (20)
	Stmt -> ';'                                        (21)
	Stmt -> Block                                      (22)
	Stmt -> Type ListItem ';'                          (23)
	Stmt -> Expr '=' Expr ';'                          (24)
	Stmt -> Expr '++' ';'                              (25)
	Stmt -> Expr '--' ';'                              (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' '(' Expr ')' Stmt                     (29)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (30)
	Stmt -> 'while' '(' Expr ')' Stmt                  (31)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (32)
	Stmt -> Expr ';'                                   (33)
	Item -> Ident                                      (34)
	Item -> Ident '=' Expr                             (35)
	ListStmt ->                                        (36)
	ListStmt -> ListStmt Stmt                          (37)
	ListItem -> Item                                   (38)
	ListItem -> Item ',' ListItem                      (39)
	ListIdent -> Ident                                 (40)
	ListIdent -> Ident ',' ListIdent                   (41)
	Type -> Ident                                      (42)
	Type -> 'int'                                      (43)
	Type -> 'string'                                   (44)
	Type -> 'boolean'                                  (45)
	Type -> 'void'                                     (46)
	Type -> Type '[]'                                  (47)
	ListType ->                                        (48)
	ListType -> Type                                   (49)
	ListType -> Type ',' ListType                      (50)
	Expr6 -> 'new' Type                                (51)
	Expr6 -> 'new' Type '[' Expr ']'                   (52)
	Expr6 -> Expr6 '.' Ident                           (53)
	Expr6 -> Expr6 '.' Ident '(' ListExpr ')'          (54)
	Expr6 -> Ident                                     (55)
	Expr6 -> Integer                                   (56)
	Expr6 -> 'true'                                    (57)
	Expr6 -> 'false'                                   (58)
	Expr6 -> String                                    (59)
	Expr6 -> Ident '(' ListExpr ')'                    (60)
	Expr6 -> Expr6 '[' Expr ']'                        (61)
	Expr6 -> '(' Expr ')'                              (62)
	Expr5 -> 'cast' '<' Ident ',' 'null' '>'           (63)
	Expr5 -> '-' Expr6                                 (64)
	Expr5 -> '!' Expr6                                 (65)
	Expr5 -> Expr6                                     (66)
	Expr4 -> Expr4 MulOp Expr5                         (67)
	Expr4 -> Expr5                                     (68)
	Expr3 -> Expr3 AddOp Expr4                         (69)
	Expr3 -> Expr4                                     (70)
	Expr2 -> Expr2 RelOp Expr3                         (71)
	Expr2 -> Expr3                                     (72)
	Expr1 -> Expr2 '&&' Expr1                          (73)
	Expr1 -> Expr2                                     (74)
	Expr -> Expr1 '||' Expr                            (75)
	Expr -> Expr1                                      (76)
	ListExpr ->                                        (77)
	ListExpr -> Expr                                   (78)
	ListExpr -> Expr ',' ListExpr                      (79)
	AddOp -> '+'                                       (80)
	AddOp -> '-'                                       (81)
	MulOp -> '*'                                       (82)
	MulOp -> '/'                                       (83)
	MulOp -> '%'                                       (84)
	RelOp -> '<'                                       (85)
	RelOp -> '<='                                      (86)
	RelOp -> '>'                                       (87)
	RelOp -> '>='                                      (88)
	RelOp -> '=='                                      (89)
	RelOp -> '!='                                      (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'cast'         { PT _ (TS _ 27) }
	'class'        { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'extends'      { PT _ (TS _ 30) }
	'false'        { PT _ (TS _ 31) }
	'for'          { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'int'          { PT _ (TS _ 34) }
	'new'          { PT _ (TS _ 35) }
	'null'         { PT _ (TS _ 36) }
	'return'       { PT _ (TS _ 37) }
	'string'       { PT _ (TS _ 38) }
	'true'         { PT _ (TS _ 39) }
	'void'         { PT _ (TS _ 40) }
	'while'        { PT _ (TS _ 41) }
	'{'            { PT _ (TS _ 42) }
	'||'           { PT _ (TS _ 43) }
	'}'            { PT _ (TS _ 44) }
	L_ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	FuncDef         rule  7
	Arg             rule  8
	ClassMember     rules 9, 10
	ClassDef        rules 11, 12
	ListArg         rules 13, 14, 15
	ListTopDef      rules 16, 17
	ListClassMember rules 18, 19
	Block           rule  20
	Stmt            rules 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Item            rules 34, 35
	ListStmt        rules 36, 37
	ListItem        rules 38, 39
	ListIdent       rules 40, 41
	Type            rules 42, 43, 44, 45, 46, 47
	ListType        rules 48, 49, 50
	Expr6           rules 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62
	Expr5           rules 63, 64, 65, 66
	Expr4           rules 67, 68
	Expr3           rules 69, 70
	Expr2           rules 71, 72
	Expr1           rules 73, 74
	Expr            rules 75, 76
	ListExpr        rules 77, 78, 79
	AddOp           rules 80, 81
	MulOp           rules 82, 83, 84
	RelOp           rules 85, 86, 87, 88, 89, 90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 10
	'class'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	FuncDef        goto state 6
	ClassDef       goto state 7
	ListTopDef     goto state 8
	Type           goto state 9

State 1

	Ident -> . L_ident                                  (rule 1)

	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	'++'           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'--'           reduce using rule 42
	'.'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42
	L_ident        reduce using rule 42


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 16)
	ListTopDef -> TopDef . ListTopDef                   (rule 17)

	'boolean'      shift, and enter state 10
	'class'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_ident        shift, and enter state 2
	%eof           reduce using rule 16

	Ident          goto state 3
	TopDef         goto state 5
	FuncDef        goto state 6
	ClassDef       goto state 7
	ListTopDef     goto state 18
	Type           goto state 9

State 6

	TopDef -> FuncDef .                                 (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 7

	TopDef -> ClassDef .                                (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 8

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 9

	FuncDef -> Type . Ident '(' ListArg ')' Block       (rule 7)
	Type -> Type . '[]'                                 (rule 47)

	'[]'           shift, and enter state 17
	L_ident        shift, and enter state 2

	Ident          goto state 16

State 10

	Type -> 'boolean' .                                 (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	'++'           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           reduce using rule 45
	'.'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'['            reduce using rule 45
	'[]'           reduce using rule 45
	']'            reduce using rule 45
	'||'           reduce using rule 45
	L_ident        reduce using rule 45


State 11

	ClassDef -> 'class' . Ident '{' ListClassMember '}'    (rule 11)
	ClassDef -> 'class' . Ident 'extends' Ident '{' ListClassMember '}'    (rule 12)

	L_ident        shift, and enter state 2

	Ident          goto state 15

State 12

	Type -> 'int' .                                     (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'++'           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'--'           reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43
	L_ident        reduce using rule 43


State 13

	Type -> 'string' .                                  (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	'++'           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'--'           reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44
	L_ident        reduce using rule 44


State 14

	Type -> 'void' .                                    (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	'++'           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'--'           reduce using rule 46
	'.'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'['            reduce using rule 46
	'[]'           reduce using rule 46
	']'            reduce using rule 46
	'||'           reduce using rule 46
	L_ident        reduce using rule 46


State 15

	ClassDef -> 'class' Ident . '{' ListClassMember '}'    (rule 11)
	ClassDef -> 'class' Ident . 'extends' Ident '{' ListClassMember '}'    (rule 12)

	'extends'      shift, and enter state 20
	'{'            shift, and enter state 21


State 16

	FuncDef -> Type Ident . '(' ListArg ')' Block       (rule 7)

	'('            shift, and enter state 19


State 17

	Type -> Type '[]' .                                 (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'--'           reduce using rule 47
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	'[]'           reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47
	L_ident        reduce using rule 47


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 17)

	%eof           reduce using rule 17


State 19

	FuncDef -> Type Ident '(' . ListArg ')' Block       (rule 7)

	')'            reduce using rule 13
	'boolean'      shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 25
	Type           goto state 26

State 20

	ClassDef -> 'class' Ident 'extends' . Ident '{' ListClassMember '}'    (rule 12)

	L_ident        shift, and enter state 2

	Ident          goto state 23

State 21

	ClassDef -> 'class' Ident '{' . ListClassMember '}'    (rule 11)

	'boolean'      reduce using rule 18
	'int'          reduce using rule 18
	'string'       reduce using rule 18
	'void'         reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18

	ListClassMembergoto state 22

State 22

	ClassDef -> 'class' Ident '{' ListClassMember . '}'    (rule 11)
	ListClassMember -> ListClassMember . ClassMember    (rule 19)

	'boolean'      shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	'}'            shift, and enter state 34
	L_ident        shift, and enter state 2

	Ident          goto state 3
	FuncDef        goto state 31
	ClassMember    goto state 32
	Type           goto state 33

State 23

	ClassDef -> 'class' Ident 'extends' Ident . '{' ListClassMember '}'    (rule 12)

	'{'            shift, and enter state 30


State 24

	ListArg -> Arg .                                    (rule 14)
	ListArg -> Arg . ',' ListArg                        (rule 15)

	')'            reduce using rule 14
	','            shift, and enter state 29


State 25

	FuncDef -> Type Ident '(' ListArg . ')' Block       (rule 7)

	')'            shift, and enter state 28


State 26

	Arg -> Type . Ident                                 (rule 8)
	Type -> Type . '[]'                                 (rule 47)

	'[]'           shift, and enter state 17
	L_ident        shift, and enter state 2

	Ident          goto state 27

State 27

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 28

	FuncDef -> Type Ident '(' ListArg ')' . Block       (rule 7)

	'{'            shift, and enter state 39

	Block          goto state 38

State 29

	ListArg -> Arg ',' . ListArg                        (rule 15)

	')'            reduce using rule 13
	'boolean'      shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 37
	Type           goto state 26

State 30

	ClassDef -> 'class' Ident 'extends' Ident '{' . ListClassMember '}'    (rule 12)

	'boolean'      reduce using rule 18
	'int'          reduce using rule 18
	'string'       reduce using rule 18
	'void'         reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18

	ListClassMembergoto state 36

State 31

	ClassMember -> FuncDef .                            (rule 10)

	'boolean'      reduce using rule 10
	'int'          reduce using rule 10
	'string'       reduce using rule 10
	'void'         reduce using rule 10
	'}'            reduce using rule 10
	L_ident        reduce using rule 10


State 32

	ListClassMember -> ListClassMember ClassMember .    (rule 19)

	'boolean'      reduce using rule 19
	'int'          reduce using rule 19
	'string'       reduce using rule 19
	'void'         reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19


State 33

	FuncDef -> Type . Ident '(' ListArg ')' Block       (rule 7)
	ClassMember -> Type . Ident ';'                     (rule 9)
	Type -> Type . '[]'                                 (rule 47)

	'[]'           shift, and enter state 17
	L_ident        shift, and enter state 2

	Ident          goto state 35

State 34

	ClassDef -> 'class' Ident '{' ListClassMember '}' .    (rule 11)

	'boolean'      reduce using rule 11
	'class'        reduce using rule 11
	'int'          reduce using rule 11
	'string'       reduce using rule 11
	'void'         reduce using rule 11
	L_ident        reduce using rule 11
	%eof           reduce using rule 11


State 35

	FuncDef -> Type Ident . '(' ListArg ')' Block       (rule 7)
	ClassMember -> Type Ident . ';'                     (rule 9)

	'('            shift, and enter state 19
	';'            shift, and enter state 42


State 36

	ClassDef -> 'class' Ident 'extends' Ident '{' ListClassMember . '}'    (rule 12)
	ListClassMember -> ListClassMember . ClassMember    (rule 19)

	'boolean'      shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	'}'            shift, and enter state 41
	L_ident        shift, and enter state 2

	Ident          goto state 3
	FuncDef        goto state 31
	ClassMember    goto state 32
	Type           goto state 33

State 37

	ListArg -> Arg ',' ListArg .                        (rule 15)

	')'            reduce using rule 15


State 38

	FuncDef -> Type Ident '(' ListArg ')' Block .       (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	'}'            reduce using rule 7
	L_ident        reduce using rule 7
	%eof           reduce using rule 7


State 39

	Block -> '{' . ListStmt '}'                         (rule 20)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'boolean'      reduce using rule 36
	'cast'         reduce using rule 36
	'false'        reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'new'          reduce using rule 36
	'return'       reduce using rule 36
	'string'       reduce using rule 36
	'true'         reduce using rule 36
	'void'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36

	ListStmt       goto state 40

State 40

	Block -> '{' ListStmt . '}'                         (rule 20)
	ListStmt -> ListStmt . Stmt                         (rule 37)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 10
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'for'          shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 12
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 13
	'true'         shift, and enter state 66
	'void'         shift, and enter state 14
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	'}'            shift, and enter state 68
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 47
	Type           goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 41

	ClassDef -> 'class' Ident 'extends' Ident '{' ListClassMember '}' .    (rule 12)

	'boolean'      reduce using rule 12
	'class'        reduce using rule 12
	'int'          reduce using rule 12
	'string'       reduce using rule 12
	'void'         reduce using rule 12
	L_ident        reduce using rule 12
	%eof           reduce using rule 12


State 42

	ClassMember -> Type Ident ';' .                     (rule 9)

	'boolean'      reduce using rule 9
	'int'          reduce using rule 9
	'string'       reduce using rule 9
	'void'         reduce using rule 9
	'}'            reduce using rule 9
	L_ident        reduce using rule 9


State 43

	Type -> Ident .                                     (rule 42)
	Expr6 -> Ident .                                    (rule 55)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 60)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            shift, and enter state 107
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	'[]'           reduce using rule 42
	'||'           reduce using rule 55
	L_ident        reduce using rule 42


State 44

	Expr6 -> Integer .                                  (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 45

	Expr6 -> String .                                   (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 46

	Stmt -> Block .                                     (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'cast'         reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 47

	ListStmt -> ListStmt Stmt .                         (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'boolean'      reduce using rule 37
	'cast'         reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'new'          reduce using rule 37
	'return'       reduce using rule 37
	'string'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 48

	Stmt -> Type . ListItem ';'                         (rule 23)
	Type -> Type . '[]'                                 (rule 47)

	'[]'           shift, and enter state 17
	L_ident        shift, and enter state 2

	Ident          goto state 104
	Item           goto state 105
	ListItem       goto state 106

State 49

	Expr6 -> Expr6 . '.' Ident                          (rule 53)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 61)
	Expr5 -> Expr6 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	'++'           reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'--'           reduce using rule 66
	'.'            shift, and enter state 102
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'['            shift, and enter state 103
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 50

	Expr4 -> Expr5 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'--'           reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68


State 51

	Expr4 -> Expr4 . MulOp Expr5                        (rule 67)
	Expr3 -> Expr4 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            shift, and enter state 99
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            shift, and enter state 100
	'+'            reduce using rule 70
	'++'           reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'--'           reduce using rule 70
	'/'            shift, and enter state 101
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70

	MulOp          goto state 98

State 52

	Expr3 -> Expr3 . AddOp Expr4                        (rule 69)
	Expr2 -> Expr3 .                                    (rule 72)

	'!='           reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'+'            shift, and enter state 96
	'++'           reduce using rule 72
	','            reduce using rule 72
	'-'            shift, and enter state 97
	'--'           reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'='            reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72

	AddOp          goto state 95

State 53

	Expr2 -> Expr2 . RelOp Expr3                        (rule 71)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 73)
	Expr1 -> Expr2 .                                    (rule 74)

	'!='           shift, and enter state 88
	'&&'           shift, and enter state 89
	')'            reduce using rule 74
	'++'           reduce using rule 74
	','            reduce using rule 74
	'--'           reduce using rule 74
	';'            reduce using rule 74
	'<'            shift, and enter state 90
	'<='           shift, and enter state 91
	'='            reduce using rule 74
	'=='           shift, and enter state 92
	'>'            shift, and enter state 93
	'>='           shift, and enter state 94
	']'            reduce using rule 74
	'||'           reduce using rule 74

	RelOp          goto state 87

State 54

	Expr -> Expr1 . '||' Expr                           (rule 75)
	Expr -> Expr1 .                                     (rule 76)

	')'            reduce using rule 76
	'++'           reduce using rule 76
	','            reduce using rule 76
	'--'           reduce using rule 76
	';'            reduce using rule 76
	'='            reduce using rule 76
	']'            reduce using rule 76
	'||'           shift, and enter state 86


State 55

	Stmt -> Expr . '=' Expr ';'                         (rule 24)
	Stmt -> Expr . '++' ';'                             (rule 25)
	Stmt -> Expr . '--' ';'                             (rule 26)
	Stmt -> Expr . ';'                                  (rule 33)

	'++'           shift, and enter state 82
	'--'           shift, and enter state 83
	';'            shift, and enter state 84
	'='            shift, and enter state 85


State 56

	Expr5 -> '!' . Expr6                                (rule 65)

	'('            shift, and enter state 57
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 81

State 57

	Expr6 -> '(' . Expr ')'                             (rule 62)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 80

State 58

	Expr5 -> '-' . Expr6                                (rule 64)

	'('            shift, and enter state 57
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 79

State 59

	Stmt -> ';' .                                       (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'cast'         reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 60

	Expr5 -> 'cast' . '<' Ident ',' 'null' '>'          (rule 63)

	'<'            shift, and enter state 78


State 61

	Expr6 -> 'false' .                                  (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 62

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 32)

	'('            shift, and enter state 77


State 63

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 30)

	'('            shift, and enter state 76


State 64

	Expr6 -> 'new' . Type                               (rule 51)
	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 52)

	'boolean'      shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 75

State 65

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 74
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 73

State 66

	Expr6 -> 'true' .                                   (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 67

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 31)

	'('            shift, and enter state 71


State 68

	Block -> '{' ListStmt '}' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'cast'         reduce using rule 20
	'class'        reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	%eof           reduce using rule 20


State 69

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 70

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 71

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 31)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 129

State 72

	Expr6 -> Ident .                                    (rule 55)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 60)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            shift, and enter state 107
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 73

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 128


State 74

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'cast'         reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 75

	Type -> Type . '[]'                                 (rule 47)
	Expr6 -> 'new' Type .                               (rule 51)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 52)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            shift, and enter state 127
			(reduce using rule 51)

	'[]'           shift, and enter state 17
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 76

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 126

State 77

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 32)

	'boolean'      shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 125

State 78

	Expr5 -> 'cast' '<' . Ident ',' 'null' '>'          (rule 63)

	L_ident        shift, and enter state 2

	Ident          goto state 124

State 79

	Expr6 -> Expr6 . '.' Ident                          (rule 53)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 61)
	Expr5 -> '-' Expr6 .                                (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'--'           reduce using rule 64
	'.'            shift, and enter state 102
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            shift, and enter state 103
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 80

	Expr6 -> '(' Expr . ')'                             (rule 62)

	')'            shift, and enter state 123


State 81

	Expr6 -> Expr6 . '.' Ident                          (rule 53)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 61)
	Expr5 -> '!' Expr6 .                                (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	'++'           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'--'           reduce using rule 65
	'.'            shift, and enter state 102
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'['            shift, and enter state 103
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 82

	Stmt -> Expr '++' . ';'                             (rule 25)

	';'            shift, and enter state 122


State 83

	Stmt -> Expr '--' . ';'                             (rule 26)

	';'            shift, and enter state 121


State 84

	Stmt -> Expr ';' .                                  (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'cast'         reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 85

	Stmt -> Expr '=' . Expr ';'                         (rule 24)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 120

State 86

	Expr -> Expr1 '||' . Expr                           (rule 75)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 119

State 87

	Expr2 -> Expr2 RelOp . Expr3                        (rule 71)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 118

State 88

	RelOp -> '!=' .                                     (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'cast'         reduce using rule 90
	'false'        reduce using rule 90
	'new'          reduce using rule 90
	'true'         reduce using rule 90
	L_ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 89

	Expr1 -> Expr2 '&&' . Expr1                         (rule 73)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 117

State 90

	RelOp -> '<' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'cast'         reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 91

	RelOp -> '<=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'cast'         reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 92

	RelOp -> '==' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'cast'         reduce using rule 89
	'false'        reduce using rule 89
	'new'          reduce using rule 89
	'true'         reduce using rule 89
	L_ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 93

	RelOp -> '>' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'cast'         reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 94

	RelOp -> '>=' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'cast'         reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'true'         reduce using rule 88
	L_ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 95

	Expr3 -> Expr3 AddOp . Expr4                        (rule 69)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 116

State 96

	AddOp -> '+' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'cast'         reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 97

	AddOp -> '-' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'cast'         reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 98

	Expr4 -> Expr4 MulOp . Expr5                        (rule 67)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 115

State 99

	MulOp -> '%' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'cast'         reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 100

	MulOp -> '*' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'cast'         reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 101

	MulOp -> '/' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'cast'         reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 102

	Expr6 -> Expr6 '.' . Ident                          (rule 53)
	Expr6 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 54)

	L_ident        shift, and enter state 2

	Ident          goto state 114

State 103

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 61)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 113

State 104

	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 112


State 105

	ListItem -> Item .                                  (rule 38)
	ListItem -> Item . ',' ListItem                     (rule 39)

	','            shift, and enter state 111
	';'            reduce using rule 38


State 106

	Stmt -> Type ListItem . ';'                         (rule 23)

	';'            shift, and enter state 110


State 107

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 60)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 77
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 108
	ListExpr       goto state 109

State 108

	ListExpr -> Expr .                                  (rule 78)
	ListExpr -> Expr . ',' ListExpr                     (rule 79)

	')'            reduce using rule 78
	','            shift, and enter state 141


State 109

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 60)

	')'            shift, and enter state 140


State 110

	Stmt -> Type ListItem ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'cast'         reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 111

	ListItem -> Item ',' . ListItem                     (rule 39)

	L_ident        shift, and enter state 2

	Ident          goto state 104
	Item           goto state 105
	ListItem       goto state 139

State 112

	Item -> Ident '=' . Expr                            (rule 35)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 138

State 113

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 61)

	']'            shift, and enter state 137


State 114

	Expr6 -> Expr6 '.' Ident .                          (rule 53)
	Expr6 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 54)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            shift, and enter state 136
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 115

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	'++'           reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'--'           reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 116

	Expr4 -> Expr4 . MulOp Expr5                        (rule 67)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 69)

	'!='           reduce using rule 69
	'%'            shift, and enter state 99
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 100
	'+'            reduce using rule 69
	'++'           reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'--'           reduce using rule 69
	'/'            shift, and enter state 101
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69

	MulOp          goto state 98

State 117

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 73)

	')'            reduce using rule 73
	'++'           reduce using rule 73
	','            reduce using rule 73
	'--'           reduce using rule 73
	';'            reduce using rule 73
	'='            reduce using rule 73
	']'            reduce using rule 73
	'||'           reduce using rule 73


State 118

	Expr3 -> Expr3 . AddOp Expr4                        (rule 69)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 71)

	'!='           reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'+'            shift, and enter state 96
	'++'           reduce using rule 71
	','            reduce using rule 71
	'-'            shift, and enter state 97
	'--'           reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71

	AddOp          goto state 95

State 119

	Expr -> Expr1 '||' Expr .                           (rule 75)

	')'            reduce using rule 75
	'++'           reduce using rule 75
	','            reduce using rule 75
	'--'           reduce using rule 75
	';'            reduce using rule 75
	'='            reduce using rule 75
	']'            reduce using rule 75


State 120

	Stmt -> Expr '=' Expr . ';'                         (rule 24)

	';'            shift, and enter state 135


State 121

	Stmt -> Expr '--' ';' .                             (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'cast'         reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 122

	Stmt -> Expr '++' ';' .                             (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'cast'         reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 123

	Expr6 -> '(' Expr ')' .                             (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'.'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 124

	Expr5 -> 'cast' '<' Ident . ',' 'null' '>'          (rule 63)

	','            shift, and enter state 134


State 125

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 32)
	Type -> Type . '[]'                                 (rule 47)

	'[]'           shift, and enter state 17
	L_ident        shift, and enter state 2

	Ident          goto state 133

State 126

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 30)

	')'            shift, and enter state 132


State 127

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 52)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 131

State 128

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'cast'         reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 129

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 31)

	')'            shift, and enter state 130


State 130

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 31)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 10
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'for'          shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 12
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 13
	'true'         shift, and enter state 66
	'void'         shift, and enter state 14
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 148
	Type           goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 131

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 52)

	']'            shift, and enter state 147


State 132

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 10
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'for'          shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 12
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 13
	'true'         shift, and enter state 66
	'void'         shift, and enter state 14
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 146
	Type           goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 133

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 32)

	':'            shift, and enter state 145


State 134

	Expr5 -> 'cast' '<' Ident ',' . 'null' '>'          (rule 63)

	'null'         shift, and enter state 144


State 135

	Stmt -> Expr '=' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'cast'         reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 136

	Expr6 -> Expr6 '.' Ident '(' . ListExpr ')'         (rule 54)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 77
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 108
	ListExpr       goto state 143

State 137

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'.'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 138

	Item -> Ident '=' Expr .                            (rule 35)

	','            reduce using rule 35
	';'            reduce using rule 35


State 139

	ListItem -> Item ',' ListItem .                     (rule 39)

	';'            reduce using rule 39


State 140

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 141

	ListExpr -> Expr ',' . ListExpr                     (rule 79)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 77
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 108
	ListExpr       goto state 142

State 142

	ListExpr -> Expr ',' ListExpr .                     (rule 79)

	')'            reduce using rule 79


State 143

	Expr6 -> Expr6 '.' Ident '(' ListExpr . ')'         (rule 54)

	')'            shift, and enter state 152


State 144

	Expr5 -> 'cast' '<' Ident ',' 'null' . '>'          (rule 63)

	'>'            shift, and enter state 151


State 145

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 32)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'new'          shift, and enter state 64
	'true'         shift, and enter state 66
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 72
	Integer        goto state 44
	String         goto state 45
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 150

State 146

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 29)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'cast'         reduce using rule 29
	'else'         shift, and enter state 149
			(reduce using rule 29)

	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 147

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 148

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'cast'         reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 149

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 30)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 10
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'for'          shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 12
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 13
	'true'         shift, and enter state 66
	'void'         shift, and enter state 14
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 154
	Type           goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 150

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 32)

	')'            shift, and enter state 153


State 151

	Expr5 -> 'cast' '<' Ident ',' 'null' '>' .          (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 152

	Expr6 -> Expr6 '.' Ident '(' ListExpr ')' .         (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 153

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 32)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 10
	'cast'         shift, and enter state 60
	'false'        shift, and enter state 61
	'for'          shift, and enter state 62
	'if'           shift, and enter state 63
	'int'          shift, and enter state 12
	'new'          shift, and enter state 64
	'return'       shift, and enter state 65
	'string'       shift, and enter state 13
	'true'         shift, and enter state 66
	'void'         shift, and enter state 14
	'while'        shift, and enter state 67
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 155
	Type           goto state 48
	Expr6          goto state 49
	Expr5          goto state 50
	Expr4          goto state 51
	Expr3          goto state 52
	Expr2          goto state 53
	Expr1          goto state 54
	Expr           goto state 55

State 154

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'cast'         reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 155

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'cast'         reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 47
Number of non-terminals: 32
Number of states: 156
